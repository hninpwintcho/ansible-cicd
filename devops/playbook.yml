---
- name: Deploy Next.js Docker container
  hosts: all
  become: yes  # Run as root
  vars:
    IMAGE_NAME: "{{ image_name }}"
    DOCKERHUB_USERNAME: "{{ dockerhub_username }}"
    DOCKERHUB_TOKEN: "{{ dockerhub_token }}"
    DOMAIN_NAME: "{{ domain_name }}"
    ENABLE_SSL: "{{ enable_ssl }}"
    APP_PORT: 3001
    SWAP_SIZE: 1024

  tasks:
    - name: Update apt package list
      apt:
        update_cache: yes

    - name: Install dependencies for Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

    - name: Add Docker APT repository
      shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

    - name: Update apt package list again
      apt:
        update_cache: yes

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Enable and start Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Set SSL mode
      set_fact:
        ssl_on: "{{ 'true' if ENABLE_SSL == 'true' else 'false' }}"

    - name: Install Certbot and Nginx plugin
      apt:
        name: "{{ item }}"
        state: present
      when: ssl_on
      with_items:
        - certbot
        - python3-certbot-nginx

    - name: Set Docker registry
      set_fact:
        docker_registry: "https://index.docker.io/v1/"
      when: docker_registry is not defined

    - name: Docker login
      docker_login:
        registry: "{{ docker_registry }}"
        username: "{{ DOCKERHUB_USERNAME }}"
        password: "{{ DOCKERHUB_TOKEN }}"
        reauthorize: yes

    - name: Pull Docker image
      docker_image:
        name: "{{ IMAGE_NAME }}"
        source: pull

    - name: Run Docker container
      docker_container:
        name: "{{ DOMAIN_NAME }}"
        image: "{{ IMAGE_NAME }}"
        state: started
        restart_policy: always
        ports:
          - "{{ APP_PORT }}:3000"
        env:
          NODE_ENV: production
          PORT: "3000"
    
    - name: Wait for Docker container to start
      wait_for:
        host: localhost
        port: "{{ APP_PORT }}"
        delay: 5
        timeout: 60

    - name: Copy Nginx configuration
      template:
        src: nginx.conf.j2
        dest: "/etc/nginx/sites-available/{{ DOMAIN_NAME }}.conf"

    - name: Enable Nginx configuration
      file:
        src: "/etc/nginx/sites-available/{{ DOMAIN_NAME }}.conf"
        dest: "/etc/nginx/sites-enabled/{{ DOMAIN_NAME }}.conf"
        state: link

    - name: Restart Nginx
      service:
        name: nginx
        state: reloaded

    - name: Install SSL certificate
      command: "certbot --nginx -d {{ DOMAIN_NAME }} -n --agree-tos --email hninpwintcho155@gmail.com"
      when: ssl_on
